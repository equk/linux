#------------------------------------------------------------------------------
#
#                         PyPanel v2.4 Configuration
#
# This configuration file is a Python script that will be executed when
# PyPanel is started.  In order for PyPanel to start properly, make sure that
# this file contains proper Python formatting and no syntax errors.
#------------------------------------------------------------------------------
VERSION = 2.4

BG_COLOR    = "0x222222"
TASK_COLOR      = "0xece9e2"
FOCUSED_COLOR   = "0x00c6ff"
SHADED_COLOR    = "0xece9e2"
MINIMIZED_COLOR = "0xece9e2"
DESKTOP_COLOR   = "0xece9e2"
CLOCK_COLOR    = "0xece9e2"
LINE_COLOR    = "0xece9e2"

TASK_SHADOW_COLOR    = "0xFFFFFF"
FOCUSED_SHADOW_COLOR    = "0xFFFFFF"
SHADED_SHADOW_COLOR    = "0xFFFFFF"
MINIMIZED_SHADOW_COLOR    = "0xFFFFFF" 
DESKTOP_SHADOW_COLOR    = "0xFFFFFF"
CLOCK_SHADOW_COLOR    = "0xFFFFFF"

P_LOCATION    = 0        # panel placement: 0 = top, 1 = bottom
P_WIDTH        = 1850        # panel width: 0 = full screen width
P_START        = 35        # starting X coordinate of the panel
P_SPACER    = 5        # spacing between panel objects
P_HEIGHT    = 25
P_L_BUFF        = 2
P_R_BUFF        = 2
P_T_BUFF        = 4
P_B_BUFF        = 4

I_HEIGHT    = 18       # application icon height
I_WIDTH        = 18       # application icon Width 
APPL_I_HEIGHT    = 18       # application launcher icon height
APPL_I_WIDTH    = 18       # application launcher icon width
TRAY_I_HEIGHT    = 18       # system tray icon height
TRAY_I_WIDTH    = 18       # system tray icon width

#------------------------------------------------------------------------------
# Panel Clock Format: 'man strftime' for detailed formatting options and help
#------------------------------------------------------------------------------
#CLOCK_FORMAT    = "%Y-%m-%d %H:%M"    # Ex: 2004-09-25 17:45 
CLOCK_FORMAT    = "%d-%m-%Y %H:%M"
CLOCK_DELAY    = 20

HIDE_LIST    = []
HIDDEN_SIZE     = 2

FONT        = "Myraid Pro:size=10"

SHOWALL        = 0        # show windows from all desktops
SHOWMINIMIZED    = 0        # only show minimized windows
#------------------------------------------------------------------------------
# Background Alpha/Shade Level: 0 (Fully Translucent) -> 255 (Fully Opaque)
# BG_COLOR is used for tinting
#------------------------------------------------------------------------------
SHADE           = 175

ABOVE        = 1        # panel is always above other apps
APPICONS    = 1        # show application icons
AUTOHIDE    = 0        # autohide uses the CLOCK_DELAY timer above
SHADOWS        = 0        # show text shadows
SHOWLINES    = 0        # show object seperation lines
SHOWBORDER    = 1        # show a border around the panel

DESKTOP_NAMES    = []

#------------------------------------------------------------------------------
# Panel Layout:       -----------------------------------
#                     [  1  ][  2  ][  3  ][  4  ][  5  ]
#                     -----------------------------------
#
# The panel layout is split into 5 sections numbered 1, 2, 3, 4 or 5 as shown
# in the diagram above.  Each of the following objects can be enabled by
# assigning it a section number or disabled by assigning it 0:
#------------------------------------------------------------------------------
DESKTOP         = 0             # Desktop name section
TASKS           = 1             # Task names section 
TRAY            = 2             # System tray section
CLOCK           = 3             # Clock section
LAUNCHER        = 0             # Application launcher section

def desktopButtonEvent(pp, button):
    pass

#-------------------------------------
def taskButtonEvent(pp, button, task):
#-------------------------------------
    """ Button event handler for the panel's tasks """
    
    if button == 1:
        pp.taskFocus(task)
    elif button == 2:
        # Destroy the application
        task.obj.destroy()
    elif button == 3:
        # Ex. - XMMS doesn't shade, so we want to minimize it instead and
        #       still use button 3 to shade other applications
        #       task.tclass is the tasks class name (WM_CLASS)
        if "xmms" in task.tclass:
            pp.toggleMinimize(task)
        else:
            pp.toggleShade(task)
    elif button == 4:
        pp.taskRaise(task, focus=1)
    elif button == 5:
        pp.taskLower(task, focus=0)

def clockButtonEvent(pp, button):
    pp.showDesktop()

def panelButtonEvent(pp, button):
    pass
